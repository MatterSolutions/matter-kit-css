// * ---------------------------------------------------------------------------    
// 
//       __ __  __
//     /  /   /   /     __/__/__
//     \ /   /   /  __   /  /  __  (/__
//      /   /   / /  /  /  /  /__) /  /
//     /   /   / (__/__/_ /__/____/  /_/
//             \
//               SOLUTIONS
// 
// 
//	=Utility - Hard
//
// 	Make an element hard (remove padding) at a breakpoint
//
// ---------------------------------------------------------------------------- *

$mk-util-hard-name: hard !default;

@if ( map-has-key( __mk_get_global_utility_map(), $mk-util-hard-name ) ) {

	$map: map-get( __mk_get_global_utility_map(), $mk-util-hard-name );
	$mk-util-hard-selector: mk-get-selector( $mk-util-hard-name, map-get( map-get( __mk_get_global_utility_map(), $mk-util-hard-name ), 'base' ), $mk-util-prefix ) !default;

	#{ $mk-util-hard-selector } {

		padding: 0 !important;

		// Top modifier
		@if ( map-has-key( $map, 'top' ) ) {

			&--top {

				padding-top: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'top--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-top: 0 !important;

							}

						}

					}

				}

			}

		}


		// Bottom modifier
		@if ( map-has-key( $map, 'bottom' ) ) {

			&--bottom {

				padding-bottom: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'bottom--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-bottom: 0 !important;

							}

						}

					}

				}

			}

		} // end if




		// Left modifier
		@if ( map-has-key( $map, 'left' ) ) {

			&--left {

				padding-left: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'left--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-left: 0 !important;

							}

						}

					}

				}

			}

		} // end if





		// Right modifier
		@if ( map-has-key( $map, 'right' ) ) {

			&--right {

				padding-right: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'right--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-right: 0 !important;

							}

						}

					}

				}

			}

		} // end if





		// Sides modifier
		@if ( map-has-key( $map, 'sides' ) ) {

			&--sides {

				padding-left: 0 !important;
				padding-right: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'sides--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-left: 0 !important;
								padding-right: 0 !important;

							}

						}

					}

				}

			}

		} // end if





		// Ends modifier
		@if ( map-has-key( $map, 'ends' ) ) {

			&--ends {

				padding-bottom: 0 !important;
				padding-top: 0 !important;

				// Loop through each breakpoint
				// Check if we want to output the breakpoint
				@each $breakpoints, $breakpoint in map-get( __mk_get_global_grid_config_map(), 'breakpoints' ) {

					@if ( map-has-key( $map, 'ends--#{ $breakpoints }' ) ) {

						&\@#{ $breakpoints } {

							@include mk-media-query( "#{ $breakpoints }" ) {

								padding-bottom: 0 !important;
								padding-top: 0 !important;

							}

						}

					}

				}

			}

		} // end if

	}

}